services:
    nginx:
        image: nginx:alpine
        container_name: nginx
        restart: always
        ports:
            - '80:80'
            - '443:443'
        volumes:
            - ./nginx.conf:/etc/nginx/nginx.conf
            - ./certbot/conf:/etc/letsencrypt
            - ./certbot/www:/var/www/certbot
        depends_on:
            - frontend
            - backend
        networks:
            - app-network
    certbot:
        image: certbot/certbot
        container_name: certbot
        depends_on:
            - nginx
        volumes:
            - ./certbot/conf:/etc/letsencrypt
            - ./certbot/www:/var/www/certbot
        command: certonly --webroot -w /var/www/certbot --force-renewal --email stepanpavlovsky@mail.ru -d marusinohome.ru --agree-tos

    frontend:
        build:
            context: ./Frontend
        ports:
            - '3000:80'
        restart: always
        depends_on:
            - backend
        networks:
            - app-network

    backend:
        build:
            context: ./Server
        ports:
            - '5000:5000'
        restart: always
        environment:
            PORT: 5000
            POSTGRES_USER: postgres
            POSTGRES_DB: TeleAd
            POSTGRES_HOST: postgres
            POSTGRES_PORT: 5432
        secrets:
            - port
            - db_password
            - bot_token
            - mongodb_uri
            - ton_api_key
            - market_wallet_address
            - market_private_key
            - market_public_key
            - fee_wallet_address
            - fee_wallet_private_key
            - fee_wallet_public_key
            - node_env
        depends_on:
            - postgres
            - mongodb
        networks:
            - app-network
    bot:
        build:
            context: ./Bot
        container_name: bot
        restart: always
        secrets:
            - bot_token
        depends_on:
            - backend
            - postgres
            - mongodb
        networks:
            - app-network

    postgres:
        image: postgres:15
        container_name: postgres
        restart: always
        environment:
            POSTGRES_USER: postgres
            POSTGRES_DB: TeleAd
            POSTGRES_PASSWORD_FILE: /run/secrets/db_password
        ports:
            - '5433:5432'
        volumes:
            - postgres_data:/var/lib/postgresql/data
            - ./init-scripts:/docker-entrypoint-initdb.d
        secrets:
            - db_password
        networks:
            - app-network

    mongodb:
        image: mongo:4.4
        container_name: mongodb
        restart: always
        ports:
            - '27018:27017'
        volumes:
            - mongodb_data:/data/db
        networks:
            - app-network

secrets:
    db_password:
        file: ./db_password.txt
    port:
        file: ./secrets/port.txt
    bot_token:
        file: ./secrets/bot_token.txt
    mongodb_uri:
        file: ./secrets/mongodb_uri.txt
    ton_api_key:
        file: ./secrets/ton_api_key.txt
    market_wallet_address:
        file: ./secrets/market_wallet_address.txt
    market_private_key:
        file: ./secrets/market_private_key.txt
    market_public_key:
        file: ./secrets/market_public_key.txt
    fee_wallet_address:
        file: ./secrets/fee_wallet_address.txt
    fee_wallet_private_key:
        file: ./secrets/fee_wallet_private_key.txt
    fee_wallet_public_key:
        file: ./secrets/fee_wallet_public_key.txt
    node_env:
        file: ./secrets/node_env.txt

volumes:
    postgres_data:
    letsencrypt:
    www:
    mongodb_data:

networks:
    app-network:
        driver: bridge
